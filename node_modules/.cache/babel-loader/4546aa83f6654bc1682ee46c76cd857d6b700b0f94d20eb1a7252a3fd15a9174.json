{"ast":null,"code":"var _jsxFileName = \"/Users/shing/Odin/memory-game/src/components/CardContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Card from './Card';\nimport baku from '../images/baku.webp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CardContainer(props) {\n  _s();\n  const {\n    handleGameLogic,\n    score,\n    highScore\n  } = props;\n\n  //fill this array of images with images in obj format later\n  // formate {src, title, backgroundColor, backgroundStyle}\n  let images = [];\n  const [cards, setNewCards] = useState(images);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n      card: card,\n      handleGameLogic: handleGameLogic\n    }, card.title, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this))\n  }, void 0, false);\n}\n_s(CardContainer, \"tQirUNtYprNoPfYP8skta0vg9jg=\");\n_c = CardContainer;\nexport default CardContainer;\nvar _c;\n$RefreshReg$(_c, \"CardContainer\");","map":{"version":3,"names":["React","useState","Card","baku","CardContainer","props","handleGameLogic","score","highScore","images","cards","setNewCards","map","card","title"],"sources":["/Users/shing/Odin/memory-game/src/components/CardContainer.js"],"sourcesContent":["import React, {useState} from 'react'\nimport Card from './Card'\nimport baku from '../images/baku.webp'\n\nfunction CardContainer(props){\n    const {handleGameLogic, score, highScore} = props;\n\n    //fill this array of images with images in obj format later\n    // formate {src, title, backgroundColor, backgroundStyle}\n    let images = [\n        \n    ]\n\n    const [cards, setNewCards] = useState(images)\n\n    return (\n        <>\n        {cards.map((card) => (\n            <Card card={card} key={card.title} handleGameLogic={handleGameLogic} />\n        ))}\n        </>\n    )\n}\n\nexport default CardContainer"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,IAAI,MAAM,qBAAqB;AAAA;AAAA;AAEtC,SAASC,aAAa,CAACC,KAAK,EAAC;EAAA;EACzB,MAAM;IAACC,eAAe;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGH,KAAK;;EAEjD;EACA;EACA,IAAII,MAAM,GAAG,EAEZ;EAED,MAAM,CAACC,KAAK,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAACQ,MAAM,CAAC;EAE7C,oBACI;IAAA,UACCC,KAAK,CAACE,GAAG,CAAEC,IAAI,iBACZ,QAAC,IAAI;MAAC,IAAI,EAAEA,IAAK;MAAkB,eAAe,EAAEP;IAAgB,GAA7CO,IAAI,CAACC,KAAK;MAAA;MAAA;MAAA;IAAA,QACpC;EAAC,iBACC;AAEX;AAAC,GAlBQV,aAAa;AAAA,KAAbA,aAAa;AAoBtB,eAAeA,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}